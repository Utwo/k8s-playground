---
# Source: playground-sandbox/templates/backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    helm.sh/chart: playground-sandbox-0.1.0
    app.kubernetes.io/name: playground-sandbox
    app.kubernetes.io/instance: playground-sandbox-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: playground-sandbox
      app.kubernetes.io/instance: playground-sandbox-dev
      app: backend
  template:
    metadata:
      labels:
        helm.sh/chart: playground-sandbox-0.1.0
        app.kubernetes.io/name: playground-sandbox
        app.kubernetes.io/instance: playground-sandbox-dev
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        app: backend
    spec:
      serviceAccountName: internal-kubectl
      securityContext:
        {}
      containers:
        - name: app
          securityContext:
            {}
          image: "ghcr.io/utwo/sandbox-backend:ae64735c4cd59035a35c19bfe675c7f4a9de60e3"
          imagePullPolicy: IfNotPresent
          workingDir: /app
          env:
            - name: SANDBOX_NODE_LABEL
              value: default
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://otel-collector.172.20.0.3.nip.io
            - name: OTEL_EXPORTER_OTLP_TRACES_HEADERS
              valueFrom:
                secretKeyRef:
                  key: OTEL_EXPORTER_OTLP_TRACES_HEADERS
                  name: playground-sandbox
            - name: SANDBOX_NAMESPACE
              value: public-dev
            - name: SERVICE_VERSION
              value: ae64735c4cd59035a35c19bfe675c7f4a9de60e3
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
            - name: metrics
              containerPort: 9464
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /app/projects
              name: project-pv-storage
      volumes:
        - name: project-pv-storage
          persistentVolumeClaim:
            claimName: projects-pv-claim-default
      nodeSelector:
        node: default
