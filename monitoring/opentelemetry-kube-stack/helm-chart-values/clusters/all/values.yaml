fullnameOverride: otel-kube-stack
collectors:
  daemon:
    resources:
      limits:
        cpu: 1
        memory: 500Mi
    scrape_configs_file: "examples/prometheus-otel/kubelet_scrape_configs.yaml"
    # Adding an additional label for this collctor.
    labels:
      otel-collector-type: otel-daemonset
    targetAllocator:
      enabled: true
      image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:main
      resources:
        limits:
          cpu: 1
          memory: 500Mi
      allocationStrategy: per-node
      prometheusCR:
        enabled: true
        podMonitorSelector: {}
        scrapeInterval: "30s"
        serviceMonitorSelector: {}
        # podMonitorSelector:
        #   matchLabels:
        #     release: prometheus-collector
        # serviceMonitorSelector:
        #   matchLabels:
        #     release: prometheus-collector
    ports:
      - appProtocol: grpc
        name: otlp-grpc
        port: 4317
        protocol: TCP
        hostPort: 4317 # Force the hostPort
    env:
      - name: PROMETHEUS_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: PROMETHEUS_AUTH_TOKEN
            name: otel-collector-secret
      - name: LOKI_USERNAME
        valueFrom:
          secretKeyRef:
            key: LOKI_USERNAME
            name: otel-collector-secret
      - name: LOKI_PASSWORD
        valueFrom:
          secretKeyRef:
            key: LOKI_PASSWORD
            name: otel-collector-secret
    config:
      exporters:
        otlp/tempo:
          endpoint: tempo.tempo.svc.cluster.local:4317
          headers:
            "Authorization": "Bearer ${PROMETHEUS_AUTH_TOKEN}"
          tls:
            insecure: true
        otlphttp/logs:
          endpoint: "http://loki.k3d-sandbox-control-serverlb.orb.local/otlp"
          auth:
            authenticator: basicauth/loki
          headers:
            "X-Scope-OrgID": "my_org"
          tls:
            insecure: true
        otlphttp/victoriametrics:
          compression: gzip
          encoding: proto
          metrics_endpoint: http://collector.k3d-sandbox-control-serverlb.orb.local/opentelemetry/v1/metrics
          headers:
            "Authorization": "Bearer ${PROMETHEUS_AUTH_TOKEN}"
          tls:
            insecure: true
      extensions:
        basicauth/loki:
          client_auth:
            username: ${LOKI_USERNAME}
            password: ${LOKI_PASSWORD}
      service:
        extensions: [basicauth/loki]
        pipelines:
          metrics:
            receivers: [prometheus]
            exporters: [otlphttp/victoriametrics]
          traces:
            exporters: [otlp/tempo]
          logs:
            exporters: [otlphttp/logs]
    presets:
      logsCollection:
        enabled: true
      kubeletMetrics:
        enabled: false
      hostMetrics:
        enabled: false
      clusterMetrics:
        enabled: false
      kubernetesAttributes:
        enabled: false
  cluster:
    enabled: false
    env:
      - name: PROMETHEUS_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: PROMETHEUS_AUTH_TOKEN
            name: otel-collector-secret
    config:
      exporters:
        otlphttp/victoriametrics:
          compression: gzip
          encoding: proto
          metrics_endpoint: http://vmsingle-server.victoria-metrics.svc.cluster.local:8429/opentelemetry/v1/metrics
          headers:
            "Authorization": "Bearer ${PROMETHEUS_AUTH_TOKEN}"
          tls:
            insecure: true
      service:
        pipelines:
          metrics:
            exporters: [otlphttp/victoriametrics]

instrumentation:
  enabled: false
opAMPBridge:
  enabled: false
kubernetesServiceMonitors:
  enabled: true
kubeApiServer:
  enabled: true
kubelet:
  enabled: true
kubeControllerManager:
  enabled: true
kubeStateMetrics:
  enabled: true
nodeExporter:
  enabled: true
